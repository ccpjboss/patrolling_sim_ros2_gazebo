<?xml version="1.0"?>
<robot name="stopy"
  xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- - - - - - - - - - - - Robot Base - - - - - - - - - - - -->

  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />

      <geometry>
        <mesh filename="package://patrolling_sim_ros2/meshes/stopy_decimated.stl" />
        <!--stopy.stl-->
      </geometry>

      <material name="skin">        <!--Colorize in Rviz (grey)-->
        <color rgba="0.4 0.4 0.4 1.0" />
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://patrolling_sim_ros2/meshes/stopy_chull.stl" />
      </geometry>
    </collision>

    <inertial>      <!--this should be fixed...-->
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="35"/>
      <inertia ixx="10.0" ixy="0.0" ixz="0.0" iyy="10.0" iyz="0.0" izz="10.0"/>
    </inertial>
  </link>


  <!-- colorize in Gazebo -->
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <child link="base_link"/>
    <parent link="base_footprint"/>
    <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  </joint>

  <!-- - - - - - - - - - - - RGBD (Orbbec) camera - - - - - - - - - - - -->
  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0.0 0 0.0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
      <material name="camera_color">        <!--Colorize in Rviz (black)-->
        <color rgba="0.0 0.0 0.0 1.0" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <!-- This camera "parent" link provides Z pointing upwards -->
    <origin xyz="0.245 0 1.17" rpy="0 0 0"/>
  </joint>

  <link name="camera_depth_frame"/>

  <joint name="camera_depth" type="fixed">
    <origin xyz="0 0 0" rpy="-1.57 0.0 -1.57"/>
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
  </joint>

  <!-- Camera -->
  <gazebo reference="camera_link">
    <material>Gazebo/Black</material>
    <sensor type="depth" name="orbbec_astra">
      <visualize>true</visualize>
      <updateRate>15.0</updateRate>      <!--should be 30Hz, but 15Hz is enough for most applications-->
      <camera name="camera">
        <horizontal_fov>1.0472</horizontal_fov>        <!--60 deg -->
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <frame_name>camera_depth_frame</frame_name>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- - - - - - - - - - - - RPLIDAR A2 Laser - - - - - - - - - - - -->
  <joint name="laser_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 0.31" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="laser"/>
  </joint>

  <link name="laser">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.2 0.2 0.05"/>
      </geometry>
      <material name="laser_color">        <!--Colorize in Rviz (black)-->
        <color rgba="0.0 0.0 0.0 1.0" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.2 0.2 0.05"/>
      </geometry>
    </collision>
  </link>

  <gazebo reference="laser">
    <sensor type="ray" name="rplidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265359</min_angle>            <!-- 360 degrees -->
            <max_angle>3.14159265359</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.20</min>
          <max>6.0</max>          <!--6m range -->
          <resolution>0.02</resolution>          <!-- 2cm uncertainty -->
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading.-->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>laser</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- - - - - - - - - - - - Drive Controller - - - - - - - - - - - -->
  <gazebo>
    <plugin name="drive_controller" filename="libgazebo_ros_planar_move.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
        <!--since gazebo_plugins publish tf topic in global namespace /tf only and it
            cannot be remapped like (namespace/tf) through launch arguments -->
        <remapping>/tf:=tf</remapping>
      </ros>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>


  <!--TUTORIAL TO ADD SENSORS http://gazebosim.org/tutorials?tut=ros_gzplugins-->

</robot>
